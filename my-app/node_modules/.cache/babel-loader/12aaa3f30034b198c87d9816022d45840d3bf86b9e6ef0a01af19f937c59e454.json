{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\Just give a try man\\\\my-app\\\\src\\\\pages\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { Upload, Check, Loader } from \"lucide-react\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const fileInputRef = useRef(null);\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    setError(\"\");\n    setUploadProgress(0);\n    if (selectedFile) {\n      if (selectedFile.size > 5 * 1024 * 1024) {\n        setError(\"File size should be less than 5MB\");\n        toast.error(\"File size should be less than 5MB\");\n        return;\n      }\n      const allowedTypes = [\"application/pdf\", \"application/msword\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"];\n      if (!allowedTypes.includes(selectedFile.type)) {\n        setError(\"Please upload PDF or Word documents only\");\n        toast.error(\"Please upload PDF or Word documents only\");\n        return;\n      }\n      setFile(selectedFile);\n      toast.success(\"File selected successfully!\");\n    }\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    const selectedFile = event.dataTransfer.files[0];\n    if (selectedFile) {\n      fileInputRef.current.files = event.dataTransfer.files;\n      handleFileChange({\n        target: fileInputRef.current\n      });\n    }\n  };\n  const saveDocument = async () => {\n    if (!file) return;\n    try {\n      var _data2;\n      setUploading(true);\n      setError(\"\");\n      setUploadProgress(10);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const response = await fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      let data;\n      try {\n        data = await response.json();\n      } catch (parseError) {\n        throw new Error(\"Failed to parse server response\");\n      }\n      if (!response.ok) {\n        var _data;\n        throw new Error(((_data = data) === null || _data === void 0 ? void 0 : _data.error) || \"Upload failed\");\n      }\n      if ((_data2 = data) !== null && _data2 !== void 0 && _data2.fileUrl) {\n        setUploadProgress(100);\n        toast.success(\"File uploaded successfully!\");\n        setFile(null);\n        if (fileInputRef.current) {\n          fileInputRef.current.value = \"\";\n        }\n      } else {\n        throw new Error(\"Invalid server response\");\n      }\n    } catch (err) {\n      console.error(\"Upload error:\", err);\n      setError(err.message || \"Upload failed. Please try again.\");\n      toast.error(err.message || \"Upload failed. Please try again.\");\n    } finally {\n      setTimeout(() => {\n        setUploading(false);\n        setUploadProgress(0);\n      }, 1000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 3000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-800\",\n        children: \"Document Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600\",\n        children: \"Upload documents to S3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-lg mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-md p-4 mb-4\",\n      onDrop: handleDrop,\n      onDragOver: e => e.preventDefault(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-2 border-dashed border-gray-300 rounded-lg p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          className: \"hidden\",\n          id: \"file-upload\",\n          accept: \".pdf,.doc,.docx\",\n          ref: fileInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          className: \"flex flex-col items-center cursor-pointer\",\n          children: [/*#__PURE__*/_jsxDEV(Upload, {\n            className: \"w-8 h-8 text-blue-500 mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: file ? file.name : \"Drag & drop or tap to upload document\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), uploadProgress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full bg-gray-200 rounded-full h-2.5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-500 h-2.5 rounded-full transition-all duration-300\",\n          style: {\n            width: `${uploadProgress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mt-1\",\n        children: [\"Uploading: \", uploadProgress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-0 left-0 right-0 p-4 bg-white border-t\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveDocument,\n        disabled: !file || uploading,\n        className: `w-full py-3 rounded-lg flex items-center justify-center space-x-2\n            ${file && !uploading ? \"bg-blue-500 text-white hover:bg-blue-600 transition-colors\" : \"bg-gray-300 text-gray-500\"}`,\n        children: uploading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Loader, {\n            className: \"w-5 h-5 animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Uploading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Check, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"tFuaRUa68soSDbA2ZWJK5ezI0Qc=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useRef","Upload","Check","Loader","toast","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUpload","_s","file","setFile","error","setError","uploading","setUploading","uploadProgress","setUploadProgress","fileInputRef","handleFileChange","event","selectedFile","target","files","size","allowedTypes","includes","type","success","handleDrop","preventDefault","dataTransfer","current","saveDocument","_data2","formData","FormData","append","response","fetch","method","body","data","json","parseError","Error","ok","_data","fileUrl","value","err","console","message","setTimeout","className","children","position","autoClose","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","e","onChange","id","accept","ref","htmlFor","name","style","width","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/Just give a try man/my-app/src/pages/FileUpload.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Upload, Check, Loader } from \"lucide-react\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n    setError(\"\");\r\n    setUploadProgress(0);\r\n\r\n    if (selectedFile) {\r\n      if (selectedFile.size > 5 * 1024 * 1024) {\r\n        setError(\"File size should be less than 5MB\");\r\n        toast.error(\"File size should be less than 5MB\");\r\n        return;\r\n      }\r\n\r\n      const allowedTypes = [\r\n        \"application/pdf\",\r\n        \"application/msword\",\r\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n      ];\r\n      if (!allowedTypes.includes(selectedFile.type)) {\r\n        setError(\"Please upload PDF or Word documents only\");\r\n        toast.error(\"Please upload PDF or Word documents only\");\r\n        return;\r\n      }\r\n\r\n      setFile(selectedFile);\r\n      toast.success(\"File selected successfully!\");\r\n    }\r\n  };\r\n\r\n  const handleDrop = (event) => {\r\n    event.preventDefault();\r\n    const selectedFile = event.dataTransfer.files[0];\r\n    if (selectedFile) {\r\n      fileInputRef.current.files = event.dataTransfer.files;\r\n      handleFileChange({ target: fileInputRef.current });\r\n    }\r\n  };\r\n\r\n  const saveDocument = async () => {\r\n    if (!file) return;\r\n\r\n    try {\r\n      setUploading(true);\r\n      setError(\"\");\r\n      setUploadProgress(10);\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n\r\n      const response = await fetch(\"http://localhost:5000/upload\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      let data;\r\n      try {\r\n        data = await response.json();\r\n      } catch (parseError) {\r\n        throw new Error(\"Failed to parse server response\");\r\n      }\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data?.error || \"Upload failed\");\r\n      }\r\n\r\n      if (data?.fileUrl) {\r\n        setUploadProgress(100);\r\n        toast.success(\"File uploaded successfully!\");\r\n        setFile(null);\r\n        if (fileInputRef.current) {\r\n          fileInputRef.current.value = \"\";\r\n        }\r\n      } else {\r\n        throw new Error(\"Invalid server response\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Upload error:\", err);\r\n      setError(err.message || \"Upload failed. Please try again.\");\r\n      toast.error(err.message || \"Upload failed. Please try again.\");\r\n    } finally {\r\n      setTimeout(() => {\r\n        setUploading(false);\r\n        setUploadProgress(0);\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-4\">\r\n      <ToastContainer position=\"top-right\" autoClose={3000} />\r\n\r\n      <div className=\"text-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold text-gray-800\">Document Upload</h1>\r\n        <p className=\"text-sm text-gray-600\">Upload documents to S3</p>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-lg mb-4\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      <div\r\n        className=\"bg-white rounded-lg shadow-md p-4 mb-4\"\r\n        onDrop={handleDrop}\r\n        onDragOver={(e) => e.preventDefault()}\r\n      >\r\n        <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4\">\r\n          <input\r\n            type=\"file\"\r\n            onChange={handleFileChange}\r\n            className=\"hidden\"\r\n            id=\"file-upload\"\r\n            accept=\".pdf,.doc,.docx\"\r\n            ref={fileInputRef}\r\n          />\r\n          <label\r\n            htmlFor=\"file-upload\"\r\n            className=\"flex flex-col items-center cursor-pointer\"\r\n          >\r\n            <Upload className=\"w-8 h-8 text-blue-500 mb-2\" />\r\n            <span className=\"text-sm text-gray-600\">\r\n              {file ? file.name : \"Drag & drop or tap to upload document\"}\r\n            </span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      {uploadProgress > 0 && (\r\n        <div className=\"mb-4\">\r\n          <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n            <div\r\n              className=\"bg-blue-500 h-2.5 rounded-full transition-all duration-300\"\r\n              style={{ width: `${uploadProgress}%` }}\r\n            ></div>\r\n          </div>\r\n          <p className=\"text-sm text-gray-600 mt-1\">\r\n            Uploading: {uploadProgress}%\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"fixed bottom-0 left-0 right-0 p-4 bg-white border-t\">\r\n        <button\r\n          onClick={saveDocument}\r\n          disabled={!file || uploading}\r\n          className={`w-full py-3 rounded-lg flex items-center justify-center space-x-2\r\n            ${\r\n              file && !uploading\r\n                ? \"bg-blue-500 text-white hover:bg-blue-600 transition-colors\"\r\n                : \"bg-gray-300 text-gray-500\"\r\n            }`}\r\n        >\r\n          {uploading ? (\r\n            <>\r\n              <Loader className=\"w-5 h-5 animate-spin\" />\r\n              <span>Uploading...</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Check className=\"w-5 h-5\" />\r\n              <span>Save</span>\r\n            </>\r\n          )}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,cAAc;AACpD,SAASC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAMqB,YAAY,GAAGpB,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAMqB,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC1CV,QAAQ,CAAC,EAAE,CAAC;IACZI,iBAAiB,CAAC,CAAC,CAAC;IAEpB,IAAII,YAAY,EAAE;MAChB,IAAIA,YAAY,CAACG,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,EAAE;QACvCX,QAAQ,CAAC,mCAAmC,CAAC;QAC7CX,KAAK,CAACU,KAAK,CAAC,mCAAmC,CAAC;QAChD;MACF;MAEA,MAAMa,YAAY,GAAG,CACnB,iBAAiB,EACjB,oBAAoB,EACpB,yEAAyE,CAC1E;MACD,IAAI,CAACA,YAAY,CAACC,QAAQ,CAACL,YAAY,CAACM,IAAI,CAAC,EAAE;QAC7Cd,QAAQ,CAAC,0CAA0C,CAAC;QACpDX,KAAK,CAACU,KAAK,CAAC,0CAA0C,CAAC;QACvD;MACF;MAEAD,OAAO,CAACU,YAAY,CAAC;MACrBnB,KAAK,CAAC0B,OAAO,CAAC,6BAA6B,CAAC;IAC9C;EACF,CAAC;EAED,MAAMC,UAAU,GAAIT,KAAK,IAAK;IAC5BA,KAAK,CAACU,cAAc,CAAC,CAAC;IACtB,MAAMT,YAAY,GAAGD,KAAK,CAACW,YAAY,CAACR,KAAK,CAAC,CAAC,CAAC;IAChD,IAAIF,YAAY,EAAE;MAChBH,YAAY,CAACc,OAAO,CAACT,KAAK,GAAGH,KAAK,CAACW,YAAY,CAACR,KAAK;MACrDJ,gBAAgB,CAAC;QAAEG,MAAM,EAAEJ,YAAY,CAACc;MAAQ,CAAC,CAAC;IACpD;EACF,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACvB,IAAI,EAAE;IAEX,IAAI;MAAA,IAAAwB,MAAA;MACFnB,YAAY,CAAC,IAAI,CAAC;MAClBF,QAAQ,CAAC,EAAE,CAAC;MACZI,iBAAiB,CAAC,EAAE,CAAC;MAErB,MAAMkB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE3B,IAAI,CAAC;MAE7B,MAAM4B,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAIO,IAAI;MACR,IAAI;QACFA,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOC,UAAU,EAAE;QACnB,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;MACpD;MAEA,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAAA,IAAAC,KAAA;QAChB,MAAM,IAAIF,KAAK,CAAC,EAAAE,KAAA,GAAAL,IAAI,cAAAK,KAAA,uBAAJA,KAAA,CAAMnC,KAAK,KAAI,eAAe,CAAC;MACjD;MAEA,KAAAsB,MAAA,GAAIQ,IAAI,cAAAR,MAAA,eAAJA,MAAA,CAAMc,OAAO,EAAE;QACjB/B,iBAAiB,CAAC,GAAG,CAAC;QACtBf,KAAK,CAAC0B,OAAO,CAAC,6BAA6B,CAAC;QAC5CjB,OAAO,CAAC,IAAI,CAAC;QACb,IAAIO,YAAY,CAACc,OAAO,EAAE;UACxBd,YAAY,CAACc,OAAO,CAACiB,KAAK,GAAG,EAAE;QACjC;MACF,CAAC,MAAM;QACL,MAAM,IAAIJ,KAAK,CAAC,yBAAyB,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZC,OAAO,CAACvC,KAAK,CAAC,eAAe,EAAEsC,GAAG,CAAC;MACnCrC,QAAQ,CAACqC,GAAG,CAACE,OAAO,IAAI,kCAAkC,CAAC;MAC3DlD,KAAK,CAACU,KAAK,CAACsC,GAAG,CAACE,OAAO,IAAI,kCAAkC,CAAC;IAChE,CAAC,SAAS;MACRC,UAAU,CAAC,MAAM;QACftC,YAAY,CAAC,KAAK,CAAC;QACnBE,iBAAiB,CAAC,CAAC,CAAC;MACtB,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKiD,SAAS,EAAC,8BAA8B;IAAAC,QAAA,gBAC3ClD,OAAA,CAACF,cAAc;MAACqD,QAAQ,EAAC,WAAW;MAACC,SAAS,EAAE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAExDxD,OAAA;MAAKiD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BlD,OAAA;QAAIiD,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrExD,OAAA;QAAGiD,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAAsB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,EAELjD,KAAK,iBACJP,OAAA;MAAKiD,SAAS,EAAC,wEAAwE;MAAAC,QAAA,EACpF3C;IAAK;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAEDxD,OAAA;MACEiD,SAAS,EAAC,wCAAwC;MAClDQ,MAAM,EAAEjC,UAAW;MACnBkC,UAAU,EAAGC,CAAC,IAAKA,CAAC,CAAClC,cAAc,CAAC,CAAE;MAAAyB,QAAA,eAEtClD,OAAA;QAAKiD,SAAS,EAAC,uDAAuD;QAAAC,QAAA,gBACpElD,OAAA;UACEsB,IAAI,EAAC,MAAM;UACXsC,QAAQ,EAAE9C,gBAAiB;UAC3BmC,SAAS,EAAC,QAAQ;UAClBY,EAAE,EAAC,aAAa;UAChBC,MAAM,EAAC,iBAAiB;UACxBC,GAAG,EAAElD;QAAa;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACFxD,OAAA;UACEgE,OAAO,EAAC,aAAa;UACrBf,SAAS,EAAC,2CAA2C;UAAAC,QAAA,gBAErDlD,OAAA,CAACN,MAAM;YAACuD,SAAS,EAAC;UAA4B;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACjDxD,OAAA;YAAMiD,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EACpC7C,IAAI,GAAGA,IAAI,CAAC4D,IAAI,GAAG;UAAuC;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEL7C,cAAc,GAAG,CAAC,iBACjBX,OAAA;MAAKiD,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBlD,OAAA;QAAKiD,SAAS,EAAC,uCAAuC;QAAAC,QAAA,eACpDlD,OAAA;UACEiD,SAAS,EAAC,4DAA4D;UACtEiB,KAAK,EAAE;YAAEC,KAAK,EAAE,GAAGxD,cAAc;UAAI;QAAE;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNxD,OAAA;QAAGiD,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GAAC,aAC7B,EAACvC,cAAc,EAAC,GAC7B;MAAA;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN,eAEDxD,OAAA;MAAKiD,SAAS,EAAC,qDAAqD;MAAAC,QAAA,eAClElD,OAAA;QACEoE,OAAO,EAAExC,YAAa;QACtByC,QAAQ,EAAE,CAAChE,IAAI,IAAII,SAAU;QAC7BwC,SAAS,EAAE;AACrB,cACc5C,IAAI,IAAI,CAACI,SAAS,GACd,4DAA4D,GAC5D,2BAA2B,EAC9B;QAAAyC,QAAA,EAEJzC,SAAS,gBACRT,OAAA,CAAAE,SAAA;UAAAgD,QAAA,gBACElD,OAAA,CAACJ,MAAM;YAACqD,SAAS,EAAC;UAAsB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC3CxD,OAAA;YAAAkD,QAAA,EAAM;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,eACzB,CAAC,gBAEHxD,OAAA,CAAAE,SAAA;UAAAgD,QAAA,gBACElD,OAAA,CAACL,KAAK;YAACsD,SAAS,EAAC;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7BxD,OAAA;YAAAkD,QAAA,EAAM;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,eACjB;MACH;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpD,EAAA,CA9KID,UAAU;AAAAmE,EAAA,GAAVnE,UAAU;AAgLhB,eAAeA,UAAU;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}