{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\Just give a try man\\\\my-app\\\\src\\\\pages\\\\PdfViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Download, FileText, Loader } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PDFViewer = () => {\n  _s();\n  const [pdfs, setPdfs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedPdf, setSelectedPdf] = useState(null);\n  useEffect(() => {\n    fetchLatestPdfs();\n  }, []);\n  const fetchLatestPdfs = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('http://localhost:5000/api/latest-pdfs');\n      if (!response.ok) throw new Error('Failed to fetch PDFs');\n      const data = await response.json();\n      setPdfs(data);\n\n      // Automatically select the latest PDF\n      if (data.length > 0) {\n        setSelectedPdf(data[0]);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const formatDate = timestamp => {\n    return new Date(timestamp).toLocaleString();\n  };\n  const formatFileSize = bytes => {\n    const mb = (bytes / (1024 * 1024)).toFixed(2);\n    return `${mb} MB`;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        className: \"w-8 h-8 animate-spin text-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 p-4 text-center\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-6\",\n        children: \"PDF Documents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold mb-4\",\n            children: \"Recent PDFs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: pdfs.map(pdf => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-3 rounded-lg cursor-pointer transition-colors ${(selectedPdf === null || selectedPdf === void 0 ? void 0 : selectedPdf.fileName) === pdf.fileName ? 'bg-blue-50 border border-blue-200' : 'hover:bg-gray-50'}`,\n              onClick: () => setSelectedPdf(pdf),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(FileText, {\n                  className: \"w-5 h-5 text-blue-500 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"font-medium truncate\",\n                    children: pdf.fileName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-500\",\n                    children: formatDate(pdf.uploadTimestamp)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-500\",\n                    children: formatFileSize(pdf.size)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)\n            }, pdf.fileName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(PDFViewer, \"R18tkZQtQx0gvH271i5C3smUluU=\");\n_c = PDFViewer;\nexport default PDFViewer;\nvar _c;\n$RefreshReg$(_c, \"PDFViewer\");","map":{"version":3,"names":["React","useState","useEffect","Download","FileText","Loader","jsxDEV","_jsxDEV","PDFViewer","_s","pdfs","setPdfs","loading","setLoading","error","setError","selectedPdf","setSelectedPdf","fetchLatestPdfs","response","fetch","ok","Error","data","json","length","err","message","formatDate","timestamp","Date","toLocaleString","formatFileSize","bytes","mb","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","pdf","onClick","uploadTimestamp","size","_c","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/Just give a try man/my-app/src/pages/PdfViewer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Download, FileText, Loader } from 'lucide-react';\r\n\r\nconst PDFViewer = () => {\r\n  const [pdfs, setPdfs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedPdf, setSelectedPdf] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchLatestPdfs();\r\n  }, []);\r\n\r\n  const fetchLatestPdfs = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch('http://localhost:5000/api/latest-pdfs');\r\n      if (!response.ok) throw new Error('Failed to fetch PDFs');\r\n      \r\n      const data = await response.json();\r\n      setPdfs(data);\r\n      \r\n      // Automatically select the latest PDF\r\n      if (data.length > 0) {\r\n        setSelectedPdf(data[0]);\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatDate = (timestamp) => {\r\n    return new Date(timestamp).toLocaleString();\r\n  };\r\n\r\n  const formatFileSize = (bytes) => {\r\n    const mb = (bytes / (1024 * 1024)).toFixed(2);\r\n    return `${mb} MB`;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <Loader className=\"w-8 h-8 animate-spin text-blue-500\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"text-red-500 p-4 text-center\">\r\n        Error: {error}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-4\">\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        <h1 className=\"text-2xl font-bold mb-6\">PDF Documents</h1>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          {/* PDF List */}\r\n          <div className=\"bg-white rounded-lg shadow p-4\">\r\n            <h2 className=\"text-lg font-semibold mb-4\">Recent PDFs</h2>\r\n            <div className=\"space-y-2\">\r\n              {pdfs.map((pdf) => (\r\n                <div\r\n                  key={pdf.fileName}\r\n                  className={`p-3 rounded-lg cursor-pointer transition-colors ${\r\n                    selectedPdf?.fileName === pdf.fileName\r\n                      ? 'bg-blue-50 border border-blue-200'\r\n                      : 'hover:bg-gray-50'\r\n                  }`}\r\n                  onClick={() => setSelectedPdf(pdf)}\r\n                >\r\n                  <div className=\"flex items-center\">\r\n                    <FileText className=\"w-5 h-5 text-blue-500 mr-2\" />\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"font-medium truncate\">{pdf.fileName}</div>\r\n                      <div className=\"text-sm text-gray-500\">\r\n                        {formatDate(pdf.uploadTimestamp)}\r\n                      </div>\r\n                      <div className=\"text-sm text-gray-500\">\r\n                        {formatFileSize(pdf.size)}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* PDF Viewer */}\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PDFViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}