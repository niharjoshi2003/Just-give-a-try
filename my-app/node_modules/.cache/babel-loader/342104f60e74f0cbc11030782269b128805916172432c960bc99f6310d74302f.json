{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\Just give a try man\\\\my-app\\\\src\\\\pages\\\\Printlayout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Printer, FileText, CreditCard } from \"lucide-react\";\nimport * as pdfjsLib from 'pdfjs-dist';\n\n// Set the worker source\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\nconst PrintingInterface = ({\n  pdfUrl\n}) => {\n  _s();\n  // Existing state variables\n  const [copies, setCopies] = useState(1);\n  const [orientation, setOrientation] = useState(\"portrait\");\n  const [selectedPages, setSelectedPages] = useState(\"all\");\n  const [customPageRange, setCustomPageRange] = useState(\"\");\n  const [totalPages, setTotalPages] = useState(0);\n  const [colorMode, setColorMode] = useState(\"bw\");\n  const [sidedMode, setSidedMode] = useState(\"single\");\n  // Initialize printerList as an array\n  const [printerList, setPrinterList] = useState([]);\n  const [selectedPrinter, setSelectedPrinter] = useState(\"\");\n  const [isPrinting, setIsPrinting] = useState(false);\n  const [isLoadingPrinters, setIsLoadingPrinters] = useState(true);\n  const [printerError, setPrinterError] = useState(null);\n\n  // Price calculations remain the same\n  const pricePerPage = colorMode === \"bw\" ? 3 : 10;\n  useEffect(() => {\n    // Load PDF details\n    loadPdfDetails();\n    // Get available printers\n    getPrinters();\n  }, [pdfUrl]);\n  const loadPdfDetails = async () => {\n    try {\n      const loadingTask = pdfjsLib.getDocument(pdfUrl);\n      const pdf = await loadingTask.promise;\n      setTotalPages(pdf.numPages);\n    } catch (error) {\n      console.error(\"Error loading PDF:\", error);\n      setTotalPages(0);\n    }\n  };\n  const getPrinters = async () => {\n    setIsLoadingPrinters(true);\n    setPrinterError(null);\n    try {\n      const response = await fetch('http://localhost:5000/printers');\n      if (!response.ok) {\n        throw new Error('Failed to fetch printers');\n      }\n      const data = await response.json();\n      // Ensure printerList is always an array\n      const printers = Array.isArray(data) ? data : [];\n      setPrinterList(printers);\n      if (printers.length > 0) {\n        var _printers$;\n        setSelectedPrinter(((_printers$ = printers[0]) === null || _printers$ === void 0 ? void 0 : _printers$.name) || \"\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching printers:\", error);\n      setPrinterError(error.message);\n      setPrinterList([]);\n    } finally {\n      setIsLoadingPrinters(false);\n    }\n  };\n  const handlePrint = async () => {\n    if (!selectedPrinter) {\n      alert(\"Please select a printer\");\n      return;\n    }\n    setIsPrinting(true);\n    try {\n      // Prepare print settings\n      const printSettings = {\n        printer: selectedPrinter,\n        copies: copies,\n        orientation: orientation,\n        colorMode: colorMode,\n        duplex: sidedMode === \"double\",\n        pages: getPageRanges(),\n        pdfUrl: pdfUrl\n      };\n\n      // Send print job to backend\n      const response = await fetch('http://localhost:5000/print', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(printSettings)\n      });\n      if (!response.ok) {\n        throw new Error('Print request failed');\n      }\n      const result = await response.json();\n      if (result.success) {\n        alert(\"Document sent to printer successfully!\");\n      } else {\n        throw new Error(result.error || \"Failed to print\");\n      }\n    } catch (error) {\n      console.error(\"Printing error:\", error);\n      alert(\"Failed to print: \" + error.message);\n    } finally {\n      setIsPrinting(false);\n    }\n  };\n\n  // Helper function to get page ranges\n  const getPageRanges = () => {\n    if (selectedPages === \"all\") {\n      return `1-${totalPages}`;\n    } else if (selectedPages === \"odd\") {\n      return Array.from({\n        length: totalPages\n      }, (_, i) => i + 1).filter(num => num % 2 !== 0).join(',');\n    } else if (selectedPages === \"even\") {\n      return Array.from({\n        length: totalPages\n      }, (_, i) => i + 1).filter(num => num % 2 === 0).join(',');\n    }\n    return customPageRange;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium mb-2\",\n        children: \"Select Printer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), isLoadingPrinters ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500\",\n        children: \"Loading printers...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this) : printerError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500\",\n        children: [\"Error loading printers: \", printerError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this) : printerList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-yellow-500\",\n        children: \"No printers found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedPrinter,\n        onChange: e => setSelectedPrinter(e.target.value),\n        className: \"w-full p-2 border rounded-md focus:ring focus:ring-blue-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a printer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), printerList.map(printer => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: printer.name,\n          children: printer.name\n        }, printer.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePrint,\n      disabled: isPrinting || !selectedPrinter || isLoadingPrinters,\n      className: \"w-full mt-4 flex items-center justify-center bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-md transition-colors disabled:bg-gray-400\",\n      children: isPrinting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"animate-spin h-5 w-5 mr-2\",\n          viewBox: \"0 0 24 24\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            className: \"opacity-25\",\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            stroke: \"currentColor\",\n            strokeWidth: \"4\",\n            fill: \"none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            className: \"opacity-75\",\n            fill: \"currentColor\",\n            d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), \"Printing...\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Printer, {\n          className: \"w-4 h-4 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), \"Pay and Print\"]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(PrintingInterface, \"ACCaXyeGr3/UFAHi+mul4pmZTSU=\");\n_c = PrintingInterface;\nexport default PrintingInterface;\nvar _c;\n$RefreshReg$(_c, \"PrintingInterface\");","map":{"version":3,"names":["React","useState","useEffect","Printer","FileText","CreditCard","pdfjsLib","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalWorkerOptions","workerSrc","version","PrintingInterface","pdfUrl","_s","copies","setCopies","orientation","setOrientation","selectedPages","setSelectedPages","customPageRange","setCustomPageRange","totalPages","setTotalPages","colorMode","setColorMode","sidedMode","setSidedMode","printerList","setPrinterList","selectedPrinter","setSelectedPrinter","isPrinting","setIsPrinting","isLoadingPrinters","setIsLoadingPrinters","printerError","setPrinterError","pricePerPage","loadPdfDetails","getPrinters","loadingTask","getDocument","pdf","promise","numPages","error","console","response","fetch","ok","Error","data","json","printers","Array","isArray","length","_printers$","name","message","handlePrint","alert","printSettings","printer","duplex","pages","getPageRanges","method","headers","body","JSON","stringify","result","success","from","_","i","filter","num","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","onClick","disabled","viewBox","cx","cy","r","stroke","strokeWidth","fill","d","_c","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/Just give a try man/my-app/src/pages/Printlayout.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Printer, FileText, CreditCard } from \"lucide-react\";\r\nimport * as pdfjsLib from 'pdfjs-dist';\r\n\r\n// Set the worker source\r\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\r\n\r\nconst PrintingInterface = ({ pdfUrl }) => {\r\n  // Existing state variables\r\n  const [copies, setCopies] = useState(1);\r\n  const [orientation, setOrientation] = useState(\"portrait\");\r\n  const [selectedPages, setSelectedPages] = useState(\"all\");\r\n  const [customPageRange, setCustomPageRange] = useState(\"\");\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [colorMode, setColorMode] = useState(\"bw\");\r\n  const [sidedMode, setSidedMode] = useState(\"single\");\r\n  // Initialize printerList as an array\r\n  const [printerList, setPrinterList] = useState([]);\r\n  const [selectedPrinter, setSelectedPrinter] = useState(\"\");\r\n  const [isPrinting, setIsPrinting] = useState(false);\r\n  const [isLoadingPrinters, setIsLoadingPrinters] = useState(true);\r\n  const [printerError, setPrinterError] = useState(null);\r\n\r\n  // Price calculations remain the same\r\n  const pricePerPage = colorMode === \"bw\" ? 3 : 10;\r\n\r\n  useEffect(() => {\r\n    // Load PDF details\r\n    loadPdfDetails();\r\n    // Get available printers\r\n    getPrinters();\r\n  }, [pdfUrl]);\r\n\r\n  const loadPdfDetails = async () => {\r\n    try {\r\n      const loadingTask = pdfjsLib.getDocument(pdfUrl);\r\n      const pdf = await loadingTask.promise;\r\n      setTotalPages(pdf.numPages);\r\n    } catch (error) {\r\n      console.error(\"Error loading PDF:\", error);\r\n      setTotalPages(0);\r\n    }\r\n  };\r\n\r\n  const getPrinters = async () => {\r\n    setIsLoadingPrinters(true);\r\n    setPrinterError(null);\r\n    try {\r\n      const response = await fetch('http://localhost:5000/printers');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch printers');\r\n      }\r\n      const data = await response.json();\r\n      // Ensure printerList is always an array\r\n      const printers = Array.isArray(data) ? data : [];\r\n      setPrinterList(printers);\r\n      if (printers.length > 0) {\r\n        setSelectedPrinter(printers[0]?.name || \"\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching printers:\", error);\r\n      setPrinterError(error.message);\r\n      setPrinterList([]);\r\n    } finally {\r\n      setIsLoadingPrinters(false);\r\n    }\r\n  };\r\n\r\n  const handlePrint = async () => {\r\n    if (!selectedPrinter) {\r\n      alert(\"Please select a printer\");\r\n      return;\r\n    }\r\n\r\n    setIsPrinting(true);\r\n\r\n    try {\r\n      // Prepare print settings\r\n      const printSettings = {\r\n        printer: selectedPrinter,\r\n        copies: copies,\r\n        orientation: orientation,\r\n        colorMode: colorMode,\r\n        duplex: sidedMode === \"double\",\r\n        pages: getPageRanges(),\r\n        pdfUrl: pdfUrl\r\n      };\r\n\r\n      // Send print job to backend\r\n      const response = await fetch('http://localhost:5000/print', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(printSettings),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Print request failed');\r\n      }\r\n\r\n      const result = await response.json();\r\n\r\n      if (result.success) {\r\n        alert(\"Document sent to printer successfully!\");\r\n      } else {\r\n        throw new Error(result.error || \"Failed to print\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Printing error:\", error);\r\n      alert(\"Failed to print: \" + error.message);\r\n    } finally {\r\n      setIsPrinting(false);\r\n    }\r\n  };\r\n\r\n  // Helper function to get page ranges\r\n  const getPageRanges = () => {\r\n    if (selectedPages === \"all\") {\r\n      return `1-${totalPages}`;\r\n    } else if (selectedPages === \"odd\") {\r\n      return Array.from({length: totalPages}, (_, i) => i + 1)\r\n        .filter(num => num % 2 !== 0)\r\n        .join(',');\r\n    } else if (selectedPages === \"even\") {\r\n      return Array.from({length: totalPages}, (_, i) => i + 1)\r\n        .filter(num => num % 2 === 0)\r\n        .join(',');\r\n    }\r\n    return customPageRange;\r\n  };\r\n\r\n  return (\r\n    <div className=\"mx-auto p-6\">\r\n      {/* Previous UI components remain the same */}\r\n      \r\n      {/* Printer Selection with Loading and Error States */}\r\n      <div className=\"mb-4\">\r\n        <label className=\"block text-sm font-medium mb-2\">Select Printer</label>\r\n        {isLoadingPrinters ? (\r\n          <div className=\"text-gray-500\">Loading printers...</div>\r\n        ) : printerError ? (\r\n          <div className=\"text-red-500\">Error loading printers: {printerError}</div>\r\n        ) : printerList.length === 0 ? (\r\n          <div className=\"text-yellow-500\">No printers found</div>\r\n        ) : (\r\n          <select\r\n            value={selectedPrinter}\r\n            onChange={(e) => setSelectedPrinter(e.target.value)}\r\n            className=\"w-full p-2 border rounded-md focus:ring focus:ring-blue-300\"\r\n          >\r\n            <option value=\"\">Select a printer</option>\r\n            {printerList.map((printer) => (\r\n              <option key={printer.name} value={printer.name}>\r\n                {printer.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modified Pay and Print Button */}\r\n      <button\r\n        onClick={handlePrint}\r\n        disabled={isPrinting || !selectedPrinter || isLoadingPrinters}\r\n        className=\"w-full mt-4 flex items-center justify-center bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-md transition-colors disabled:bg-gray-400\"\r\n      >\r\n        {isPrinting ? (\r\n          <>\r\n            <svg className=\"animate-spin h-5 w-5 mr-2\" viewBox=\"0 0 24 24\">\r\n              <circle\r\n                className=\"opacity-25\"\r\n                cx=\"12\"\r\n                cy=\"12\"\r\n                r=\"10\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"4\"\r\n                fill=\"none\"\r\n              />\r\n              <path\r\n                className=\"opacity-75\"\r\n                fill=\"currentColor\"\r\n                d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n              />\r\n            </svg>\r\n            Printing...\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Printer className=\"w-4 h-4 mr-2\" />\r\n            Pay and Print\r\n          </>\r\n        )}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrintingInterface;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,cAAc;AAC5D,OAAO,KAAKC,QAAQ,MAAM,YAAY;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACAJ,QAAQ,CAACK,mBAAmB,CAACC,SAAS,GAAG,2CAA2CN,QAAQ,CAACO,OAAO,oBAAoB;AAExH,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACxC;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,UAAU,CAAC;EAC1D,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACsB,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACwB,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,QAAQ,CAAC;EACpD;EACA,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgC,eAAe,EAAEC,kBAAkB,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACkC,UAAU,EAAEC,aAAa,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACoC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACsC,YAAY,EAAEC,eAAe,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMwC,YAAY,GAAGd,SAAS,KAAK,IAAI,GAAG,CAAC,GAAG,EAAE;EAEhDzB,SAAS,CAAC,MAAM;IACd;IACAwC,cAAc,CAAC,CAAC;IAChB;IACAC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAAC5B,MAAM,CAAC,CAAC;EAEZ,MAAM2B,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAME,WAAW,GAAGtC,QAAQ,CAACuC,WAAW,CAAC9B,MAAM,CAAC;MAChD,MAAM+B,GAAG,GAAG,MAAMF,WAAW,CAACG,OAAO;MACrCrB,aAAa,CAACoB,GAAG,CAACE,QAAQ,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CvB,aAAa,CAAC,CAAC,CAAC;IAClB;EACF,CAAC;EAED,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BL,oBAAoB,CAAC,IAAI,CAAC;IAC1BE,eAAe,CAAC,IAAI,CAAC;IACrB,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;MAC9D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC;MACA,MAAMC,QAAQ,GAAGC,KAAK,CAACC,OAAO,CAACJ,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE;MAChDvB,cAAc,CAACyB,QAAQ,CAAC;MACxB,IAAIA,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;QAAA,IAAAC,UAAA;QACvB3B,kBAAkB,CAAC,EAAA2B,UAAA,GAAAJ,QAAQ,CAAC,CAAC,CAAC,cAAAI,UAAA,uBAAXA,UAAA,CAAaC,IAAI,KAAI,EAAE,CAAC;MAC7C;IACF,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDT,eAAe,CAACS,KAAK,CAACc,OAAO,CAAC;MAC9B/B,cAAc,CAAC,EAAE,CAAC;IACpB,CAAC,SAAS;MACRM,oBAAoB,CAAC,KAAK,CAAC;IAC7B;EACF,CAAC;EAED,MAAM0B,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAAC/B,eAAe,EAAE;MACpBgC,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACF;IAEA7B,aAAa,CAAC,IAAI,CAAC;IAEnB,IAAI;MACF;MACA,MAAM8B,aAAa,GAAG;QACpBC,OAAO,EAAElC,eAAe;QACxBhB,MAAM,EAAEA,MAAM;QACdE,WAAW,EAAEA,WAAW;QACxBQ,SAAS,EAAEA,SAAS;QACpByC,MAAM,EAAEvC,SAAS,KAAK,QAAQ;QAC9BwC,KAAK,EAAEC,aAAa,CAAC,CAAC;QACtBvD,MAAM,EAAEA;MACV,CAAC;;MAED;MACA,MAAMoC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DmB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,aAAa;MACpC,CAAC,CAAC;MAEF,IAAI,CAACf,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MAEA,MAAMsB,MAAM,GAAG,MAAMzB,QAAQ,CAACK,IAAI,CAAC,CAAC;MAEpC,IAAIoB,MAAM,CAACC,OAAO,EAAE;QAClBZ,KAAK,CAAC,wCAAwC,CAAC;MACjD,CAAC,MAAM;QACL,MAAM,IAAIX,KAAK,CAACsB,MAAM,CAAC3B,KAAK,IAAI,iBAAiB,CAAC;MACpD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvCgB,KAAK,CAAC,mBAAmB,GAAGhB,KAAK,CAACc,OAAO,CAAC;IAC5C,CAAC,SAAS;MACR3B,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;;EAED;EACA,MAAMkC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIjD,aAAa,KAAK,KAAK,EAAE;MAC3B,OAAO,KAAKI,UAAU,EAAE;IAC1B,CAAC,MAAM,IAAIJ,aAAa,KAAK,KAAK,EAAE;MAClC,OAAOqC,KAAK,CAACoB,IAAI,CAAC;QAAClB,MAAM,EAAEnC;MAAU,CAAC,EAAE,CAACsD,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CACrDC,MAAM,CAACC,GAAG,IAAIA,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAC5BC,IAAI,CAAC,GAAG,CAAC;IACd,CAAC,MAAM,IAAI9D,aAAa,KAAK,MAAM,EAAE;MACnC,OAAOqC,KAAK,CAACoB,IAAI,CAAC;QAAClB,MAAM,EAAEnC;MAAU,CAAC,EAAE,CAACsD,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CACrDC,MAAM,CAACC,GAAG,IAAIA,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAC5BC,IAAI,CAAC,GAAG,CAAC;IACd;IACA,OAAO5D,eAAe;EACxB,CAAC;EAED,oBACEf,OAAA;IAAK4E,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAI1B7E,OAAA;MAAK4E,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnB7E,OAAA;QAAO4E,SAAS,EAAC,gCAAgC;QAAAC,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EACvEpD,iBAAiB,gBAChB7B,OAAA;QAAK4E,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,GACtDlD,YAAY,gBACd/B,OAAA;QAAK4E,SAAS,EAAC,cAAc;QAAAC,QAAA,GAAC,0BAAwB,EAAC9C,YAAY;MAAA;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,GACxE1D,WAAW,CAAC6B,MAAM,KAAK,CAAC,gBAC1BpD,OAAA;QAAK4E,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAExDjF,OAAA;QACEkF,KAAK,EAAEzD,eAAgB;QACvB0D,QAAQ,EAAGC,CAAC,IAAK1D,kBAAkB,CAAC0D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACpDN,SAAS,EAAC,6DAA6D;QAAAC,QAAA,gBAEvE7E,OAAA;UAAQkF,KAAK,EAAC,EAAE;UAAAL,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACzC1D,WAAW,CAAC+D,GAAG,CAAE3B,OAAO,iBACvB3D,OAAA;UAA2BkF,KAAK,EAAEvB,OAAO,CAACL,IAAK;UAAAuB,QAAA,EAC5ClB,OAAO,CAACL;QAAI,GADFK,OAAO,CAACL,IAAI;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEjB,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNjF,OAAA;MACEuF,OAAO,EAAE/B,WAAY;MACrBgC,QAAQ,EAAE7D,UAAU,IAAI,CAACF,eAAe,IAAII,iBAAkB;MAC9D+C,SAAS,EAAC,mJAAmJ;MAAAC,QAAA,EAE5JlD,UAAU,gBACT3B,OAAA,CAAAE,SAAA;QAAA2E,QAAA,gBACE7E,OAAA;UAAK4E,SAAS,EAAC,2BAA2B;UAACa,OAAO,EAAC,WAAW;UAAAZ,QAAA,gBAC5D7E,OAAA;YACE4E,SAAS,EAAC,YAAY;YACtBc,EAAE,EAAC,IAAI;YACPC,EAAE,EAAC,IAAI;YACPC,CAAC,EAAC,IAAI;YACNC,MAAM,EAAC,cAAc;YACrBC,WAAW,EAAC,GAAG;YACfC,IAAI,EAAC;UAAM;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,eACFjF,OAAA;YACE4E,SAAS,EAAC,YAAY;YACtBmB,IAAI,EAAC,cAAc;YACnBC,CAAC,EAAC;UAAiH;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAER;MAAA,eAAE,CAAC,gBAEHjF,OAAA,CAAAE,SAAA;QAAA2E,QAAA,gBACE7E,OAAA,CAACL,OAAO;UAACiF,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,iBAEtC;MAAA,eAAE;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACzE,EAAA,CA7LIF,iBAAiB;AAAA2F,EAAA,GAAjB3F,iBAAiB;AA+LvB,eAAeA,iBAAiB;AAAC,IAAA2F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}