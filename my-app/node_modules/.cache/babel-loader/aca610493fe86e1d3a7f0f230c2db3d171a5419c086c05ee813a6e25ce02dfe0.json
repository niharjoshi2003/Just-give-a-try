{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\Just give a try man\\\\my-app\\\\src\\\\pages\\\\Print.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Print() {\n  const handlePrint = async () => {\n    const pdfUrl = \"https://venor-printing.s3.eu-north-1.amazonaws.com/1_1234.pdf\";\n    try {\n      const response = await fetch(\"http://localhost:5000/print\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          pdfUrl\n        })\n      });\n      const result = await response.json();\n      alert(result.message || result.error);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Failed to print. Check console for details.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handlePrint,\n    children: \"Print Document\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n}\n_c = Print;\nexport default Print;\nvar _c;\n$RefreshReg$(_c, \"Print\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Print","handlePrint","pdfUrl","response","fetch","method","headers","body","JSON","stringify","result","json","alert","message","error","console","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/Just give a try man/my-app/src/pages/Print.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction Print() {\r\n\r\n    const handlePrint = async () => {\r\n        const pdfUrl = \"https://venor-printing.s3.eu-north-1.amazonaws.com/1_1234.pdf\";\r\n    \r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/print\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ pdfUrl }),\r\n            });\r\n    \r\n            const result = await response.json();\r\n            alert(result.message || result.error);\r\n        } catch (error) {\r\n            console.error(\"Error:\", error);\r\n            alert(\"Failed to print. Check console for details.\");\r\n        }\r\n    };\r\n\r\n    return <button onClick={handlePrint}>Print Document</button>;\r\n\r\n}\r\n\r\nexport default Print;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,KAAKA,CAAA,EAAG;EAEb,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,MAAM,GAAG,+DAA+D;IAE9E,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QACxDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP;QAAO,CAAC;MACnC,CAAC,CAAC;MAEF,MAAMQ,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACpCC,KAAK,CAACF,MAAM,CAACG,OAAO,IAAIH,MAAM,CAACI,KAAK,CAAC;IACzC,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BF,KAAK,CAAC,6CAA6C,CAAC;IACxD;EACJ,CAAC;EAED,oBAAOb,OAAA;IAAQiB,OAAO,EAAEf,WAAY;IAAAgB,QAAA,EAAC;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEhE;AAACC,EAAA,GAtBQtB,KAAK;AAwBd,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}