{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\Just give a try man\\\\my-app\\\\src\\\\pages\\\\PdfViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LatestPdfViewer = () => {\n  _s();\n  const [pdfUrl, setPdfUrl] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  // Fetch the latest PDF\n  const fetchLatestPdf = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\"http://localhost:5000/latest-pdf\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch the latest PDF\");\n      }\n      const data = await response.json();\n      setPdfUrl(data.pdfUrl);\n      setError(\"\");\n    } catch (error) {\n      console.error(\"Error fetching latest PDF:\", error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchLatestPdf();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex flex-col items-center justify-center p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold text-gray-800 mb-4\",\n      children: \"Latest PDF Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600\",\n      children: \"Loading latest PDF...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 text-red-700 px-4 py-2 rounded mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), pdfUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-3xl bg-white shadow-md rounded-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: pdfUrl,\n        title: \"PDF Preview\",\n        className: \"w-full h-96 border rounded-md\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: pdfUrl,\n          download: true,\n          className: \"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 transition duration-200\",\n          children: \"Download PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(LatestPdfViewer, \"UI2Gehn9PclP1Ue7MLSp1rRUHso=\");\n_c = LatestPdfViewer;\nexport default LatestPdfViewer;\nvar _c;\n$RefreshReg$(_c, \"LatestPdfViewer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LatestPdfViewer","_s","pdfUrl","setPdfUrl","error","setError","loading","setLoading","fetchLatestPdf","response","fetch","ok","Error","data","json","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","title","href","download","_c","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Desktop/Just give a try man/my-app/src/pages/PdfViewer.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst LatestPdfViewer = () => {\r\n  const [pdfUrl, setPdfUrl] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch the latest PDF\r\n  const fetchLatestPdf = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(\"http://localhost:5000/latest-pdf\");\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch the latest PDF\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      setPdfUrl(data.pdfUrl);\r\n      setError(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error fetching latest PDF:\", error);\r\n      setError(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchLatestPdf();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex flex-col items-center justify-center p-6\">\r\n      <h1 className=\"text-2xl font-bold text-gray-800 mb-4\">Latest PDF Viewer</h1>\r\n\r\n      {loading && <p className=\"text-gray-600\">Loading latest PDF...</p>}\r\n\r\n      {error && (\r\n        <div className=\"bg-red-100 text-red-700 px-4 py-2 rounded mb-4\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {pdfUrl && (\r\n        <div className=\"w-full max-w-3xl bg-white shadow-md rounded-lg p-4\">\r\n          <iframe\r\n            src={pdfUrl}\r\n            title=\"PDF Preview\"\r\n            className=\"w-full h-96 border rounded-md\"\r\n          ></iframe>\r\n\r\n          <div className=\"mt-4 text-center\">\r\n            <a\r\n              href={pdfUrl}\r\n              download\r\n              className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 transition duration-200\"\r\n            >\r\n              Download PDF\r\n            </a>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LatestPdfViewer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}